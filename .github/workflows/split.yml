name: Build all or based on changes

on:
    push:
      branches:
        - "feature/test"

    workflow_dispatch:
        inputs:
            build_all:
                description: 'Build all services?'
                required: true
                type: boolean
            
            sha:
                description: 'Sha to test'
                required: true
                type: string

env:
  BUILD_ALL: ${{ inputs.build_all || true }}
  SHA: ${{ inputs.sha || github.sha }}

jobs:
    set-new-envs:
      runs-on: ubuntu-latest
      outputs:
        continue: steps.setup.outputs.BUILD_ALL
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Must be changed to 2 once test finish

        - name: Read env file
          working-directory: ./.github/workflows
          id: setup
          run: |
            echo "${{ toJSON(env) }}"
            if [ "$GITHUB_EVENT_NAME" = "push" ]; then
              echo "SETUP from env file"
              source inputs.env
              echo "$WF_SHA"
              echo "SHA=$WF_SHA" >> $GITHUB_ENV
              echo "BUILD_ALL=$WF_BUILD_ALL" >> $GITHUB_ENV
              echo "BUILD_ALL=$WF_BUILD_ALL" >> $GITHUB_OUTPUT
            else
              echo "SETUP from input... No change"
              echo "BUILD_ALL=$env.BUILD_ALL" >> $GITHUB_OUTPUT
            fi
            echo "${{ toJSON(env) }}"

    show-diff:
        needs: set-new-envs
        if: needs.set-new-envs.outputs.continue
        runs-on: ubuntu-latest
        outputs:
            service-matrix: ${{steps.service-matrix.outputs.value}}
            excluded-services: ${{steps.service-matrix.outputs.excluded}}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0 # Must be changed to 2 once test finish

            - name: Show files changed in the commit
              id: service-matrix
              run: |
                echo "Changed files in commit ${{ env.SHA}}:" 
                services=$(git diff-tree --no-commit-id --name-only -r ${{ env.SHA }} | grep -E "^services/*" | cut -d'/' -f2 | uniq | jq -R -s -c 'split("\n")[:-1]')
                allfolder=$(find './services/' -type d -mindepth 1 -maxdepth 1 -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
                excluded=$(jq -c --argjson s "$allfolder" --argjson e "$services" '$s-$e' <<< '{}' )
                echo "value=$services" >> $GITHUB_OUTPUT
                echo "excluded=$excluded" >> $GITHUB_OUTPUT
            
            - name: Output
              run: |
                echo "${{ steps.service-matrix.outputs.value }}"
                echo "${{ steps.service-matrix.outputs.excluded }}"
            
        
    split-build:
        if: needs.show-diff.outputs.service-matrix != '[]'
        runs-on: ubuntu-latest
        needs: show-diff
        strategy:
            matrix:
                value: ${{ fromJSON(needs.show-diff.outputs.service-matrix) }}
        steps:
            - run: |
                echo "should match the service: "
                echo "${{ matrix.value }}"
