#creates a workflow that lint, test, and build
name: Python workflow

on:
  workflow_dispatch: 

  push:
    paths:
      - 'services/cities/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install deps
        working-directory: ./services/cities
        run: pip install --no-cache -r requirements.txt

      - name: Flake8
        working-directory: ./services/cities
        run: flake8 *.py

      - name: Black
        working-directory: ./services/cities
        run: black --check *.py

  test:
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      hashed-file-name: ${{ steps.encoded.outputs.hash }}
    steps:
      - uses: actions/checkout@v4

      - name: install deps
        working-directory: ./services/cities
        run: pip install --no-cache -r requirements.txt

      - name: Run tests
        working-directory: ./services/cities
        run: pytest --html=report.html

      - name: Get datetime
        id: encoded
        run: |
          echo "Assume that we are encoding something important into filename"
          filename="hashed_data.txt" 
          echo "gets lists of modified files and datetime of build" > $filename
          echo "hash=$(echo -n "$filename" | sha256sum | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Upload report file
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: |
            ./services/cities/report.html
            ./services/cities/assets/**
            ./services/cities/hashed_data.txt
      

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifacts@v4
        with:
          name: pytest-report
      
      - name: Show contents
        run: |
          ls -a
          pwd

      - name: Outputs data
        run: |
          echo "context needs is based on dependancy jobs"
          echo "${{ needs.test.outputs.hashed-file-name }}"
      
      - name: Build
        working-directory: ./services/cities
        run: echo "Build"